{"ast":null,"code":"var _jsxFileName = \"/media/joshy/1bb10890-6038-4a33-a125-4d6116ad8e30/React Project Using Hooks/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // const [userInput,setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: '',\n  // })\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // spesific state management for fields\n    // setUserInput((prevState) => {                             // group state management\n    //     return {...prevState,enteredTitle:event.target.value}; // need to compare with previous state and copy all state overwrite the needed one\n    // })\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); //prevent re-render when form submission\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData); //Exicute parent function and pass the expenseData as argument to parent\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle //value helps to achive 2 way data binding\n          ,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2021-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/media/joshy/1bb10890-6038-4a33-a125-4d6116ad8e30/React Project Using Hooks/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './ExpenseForm.css';\n\n\nconst ExpenseForm = (props) =>\n{\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    // const [userInput,setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: '',\n    // })\n\n\n\n    const titleChangeHandler = (event) =>\n    {\n           setEnteredTitle(event.target.value);                      // spesific state management for fields\n        // setUserInput((prevState) => {                             // group state management\n        //     return {...prevState,enteredTitle:event.target.value}; // need to compare with previous state and copy all state overwrite the needed one\n        // })\n\n    }\n    const amountChangeHandler = (event) =>\n    {\n        setEnteredAmount(event.target.value);\n    }\n    const dateChangeHandler = (event) =>\n    {\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();                //prevent re-render when form submission\n\n       const expenseData = {\n        title: enteredTitle,\n        amount: enteredAmount,\n        date: new Date(enteredDate),\n       };\n       \n\n        props.onSaveExpenseData(expenseData);       //Exicute parent function and pass the expenseData as argument to parent\n\n\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n\n    }\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__controls'>\n                    <label>Title</label>\n                    <input type=\"text\" \n                    value={enteredTitle}                                 //value helps to achive 2 way data binding\n                    onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__controls'>\n                    <label>Amount</label>\n                    <input type='number' \n                    value={enteredAmount}\n                    min=\"0.01\" step=\"0.01\"\n                    onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__controls'>\n                    <label>Date</label>\n                    <input type='date' \n                    value={enteredDate} \n                    min=\"2021-01-01\" \n                    max=\"2022-12-31\" \n                    onChange={dateChangeHandler}/>\n                </div>\n\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n                <button type=\"Button\">Cancel</button>\n            </div> \n        </form>\n\n    );\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}