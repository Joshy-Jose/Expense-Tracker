{"ast":null,"code":"var _jsxFileName = \"/media/joshy/1bb10890-6038-4a33-a125-4d6116ad8e30/React Project Using Hooks/src/components/Expenses/ExpensesList.js\";\nimport React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  console.log(props);\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expense Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 26\n  }, this);\n\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"xpenses-list__fallback\",\n      children: \"Found no expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.items.map(expense =>\n    /*#__PURE__*/\n    // && => first condition is met(filteredExpenses.length === 0) it move to second condition(No Expense Found) and retun value\n    _jsxDEV(ExpenseItem, {\n      //unique id which helps react identify each item,provide better performance,prevenet updation of all item\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/media/joshy/1bb10890-6038-4a33-a125-4d6116ad8e30/React Project Using Hooks/src/components/Expenses/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesList","props","console","log","expenseContent","items","length","map","expense","title","amount","date","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IACrB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,MAAIG,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA,MAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,KAAuB,CAA1B,EACA;AACI,wBAAO;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACML,KAAK,CAACI,KAAN,CAAYE,GAAZ,CAAiBC,OAAD;AAAA;AAAqB;AACvC,YAAC,WAAD;AACwC;AACxC,MAAA,KAAK,EAAIA,OAAO,CAACC,KAFjB;AAGA,MAAA,MAAM,EAAID,OAAO,CAACE,MAHlB;AAIA,MAAA,IAAI,EAAIF,OAAO,CAACG;AAJhB,OACKH,OAAO,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,YADE;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3BD;;KAAMZ,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from \"./ExpenseItem\";\n\n\nconst ExpensesList = (props) =>\n{\n    console.log(props);\n    let expenseContent = <p>No Expense Found</p>;\n    if(props.items.length === 0)\n    {\n        return <h2 className=\"xpenses-list__fallback\">Found no expenses</h2>\n    }\n \n\n    return(\n        <ul className=\"expenses-list\">\n            { props.items.map((expense) => (       // && => first condition is met(filteredExpenses.length === 0) it move to second condition(No Expense Found) and retun value\n            <ExpenseItem\n            key={expense.id}                        //unique id which helps react identify each item,provide better performance,prevenet updation of all item\n            title = {expense.title}\n            amount = {expense.amount}\n            date = {expense.date}\n            />\n     ))\n                \n        }\n\n\n        </ul>\n    );\n\n}\n\nexport default ExpensesList;"]},"metadata":{},"sourceType":"module"}